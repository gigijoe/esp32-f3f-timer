[env:defect_detector]
board = adafruit_metro_m4
build_flags =
    ; An isolated configuration from CFA_Config.hpp is used here to test EVERY possible
    ; configuration, and ensure that defects (if any) are picked up.
    ; The `ENV_DEFECT_DETECTOR` define configures CRSF for Arduino for use with the Defect Detector.
    -DENV_DEFECT_DETECTOR

    -DCRSF_FAILSAFE_LQI_THRESHOLD=80
    -DCRSF_FAILSAFE_RSSI_THRESHOLD=105

    -DCRSF_RC_ENABLED=1
    -DCRSF_RC_MAX_CHANNELS=16
    -DCRSF_RC_CHANNEL_MIN=172
    -DCRSF_RC_CHANNEL_MAX=1811
    -DCRSF_RC_CHANNEL_CENTER=992
    -DCRSF_RC_INITIALISE_CHANNELS=1
    -DCRSF_RC_INITIALISE_ARMCHANNEL=1
    -DCRSF_RC_INITIALISE_THROTTLECHANNEL=1

    -DCRSF_FLIGHTMODES_ENABLED=1
    -DCRSF_CUSTOM_FLIGHT_MODES_ENABLED=1

    -DCRSF_TELEMETRY_ENABLED=1
    -DCRSF_TELEMETRY_ATTITUDE_ENABLED=1
    -DCRSF_TELEMETRY_BAROALTITUDE_ENABLED=1
    -DCRSF_TELEMETRY_BATTERY_ENABLED=1
    -DCRSF_TELEMETRY_FLIGHTMODE_ENABLED=1
    -DCRSF_TELEMETRY_GPS_ENABLED=1

    -DCRSF_LINK_STATISTICS_ENABLED=1

build_src_filter = 
    +<../examples/platformio/main.cpp>
    +<*/*/*.cpp>
    +<*.cpp>
build_type = debug
check_flags =
    --disable=unusedFunction
check_severity = low, medium, high
check_skip_packages = yes
check_tool = cppcheck
extends = env_common_samd51

[build]
; Intentionally left blank to allow PlatformIO to process _all_ targets CRSF for Arduino is compatible with.
all =

; Build check will be restricted to commonly used targets, if this is selected in platformio.ini.
commonly_used =
    adafruit_feather_m0
    adafruit_feather_m4
    adafruit_feather_m4_can
    adafruit_metro_m4
    adafruit_qtpy_esp32
    adafruit_qtpy_esp32c3
    adafruit_qtpy_esp32s2
    adafruit_qtpy_esp32s3_nopsram
    arduino_nano_rp2040_connect
    seeed_xiao_esp32c3
    seeed_xiao_esp32s3
    stm32f103cb
    stm32f405rg
    stm32f411re
    stm32h750vb
    teensy_41
